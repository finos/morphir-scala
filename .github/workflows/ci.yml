name: CI

env:
  JDK_JAVA_OPTIONS: -XX:+PrintCommandLineFlags # JDK_JAVA_OPTIONS is _the_ env. variable to use for modern Java
  JVM_OPTS: -XX:+PrintCommandLineFlags # for Java 8 only (sadly, it is not modern enough for JDK_JAVA_OPTIONS)

on:
  pull_request:
  push:
    branches: ['main']
  release:
    types:
      - published

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v13
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Lint code
        run: ./mill __.checkFormat

  check-website-build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3.0.2
      - name: Check MDoc related files
        run: ./mill -i -k __.mdoc


  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        java: ['adopt@1.8', 'adopt@1.11']
        scala: ['2.13.9', '3.2.0']
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v13
        with:
          java-version: ${{ matrix.java }}
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      
      - run: ./mill -i -k __.publishLocal $(pwd)/testRepo

      - name: Run tests
        if: ${{ !startsWith(matrix.scala, '3.') }}
        run: ./mill -i -k scalaBuild "${{matrix.scala}}" __.testCached
      - name: Run dotty tests
        if: ${{ startsWith(matrix.scala, '3.') }}
        run: ./mill -i -k scalaBuild "${{matrix.scala}}" __.testCached

  publish-sonatype:
      # when in master repo: all commits to main branch and all additional tags
    if: github.repository == 'finos/morphir-scala' && ( github.ref == 'refs/heads/main' || (github.ref != 'refs/heads/main' && startsWith( github.ref, 'refs/tags/') ) )
    needs: [ci]
    
    runs-on: ubuntu-latest

    # only run one publish job for the same sha at the same time
    # e.g. when a main-branch push is also tagged
    concurrency: publish-sonatype-${{ github.sha }}

    env:
      PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
      PGP_SECRET: ${{ secrets.PGP_SECRET_BASE64 }}
      SONATYPE_PASSWORD: ${{ secrets.MAVEN_DEPLOY_PASSWORD }}
      SONATYPE_USERNAME: ${{ secrets.MAVEN_DEPLOY_USERNAME }}
      PUBLISH_AS_SNAPSHOT: true
      LANG: "en_US.UTF-8"
      LC_MESSAGES: "en_US.UTF-8"
      LC_ALL: "en_US.UTF-8"

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: coursier/cache-action@v6

      - uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: temurin

      - run: ./mill -i io.kipp.mill.ci.release.ReleaseModule/publishAll

  ci:
    runs-on: ubuntu-latest
    needs: [lint, check-website-build, test]
    steps:
      - name: Aggregate of lint, and all tests
        run: echo "ci passed"
